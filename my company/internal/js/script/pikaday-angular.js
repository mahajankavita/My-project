(function(root,factory){if(typeof define==='function'&&define.amd){define(['angular','pikaday'],factory);}else if(typeof exports==='object'){module.exports=factory(require('angular'),require('pikaday'));}else{root.returnExports=factory(root.angular,root.Pikaday);}}(this,function(angular,Pikaday){angular.module('pikaday',[]).provider('pikadayConfig',function pikadayProviderFn(){var config={};this.$get=function(){return config;};this.setConfig=function setConfig(configs){config=configs;};}).directive('pikaday',['pikadayConfig',pikadayDirectiveFn]);function pikadayDirectiveFn(pikadayConfig){return{restrict:'A',scope:{pikaday:'=',onSelect:'&',onOpen:'&',onClose:'&',onDraw:'&',disableDayFn:'&'},link:function(scope,elem,attrs){var config={field:elem[0],onSelect:function(){setTimeout(function(){scope.$apply();});}};angular.forEach(pikadayConfig,function(value,key){config[key]=value;});angular.forEach(attrs.$attr,function(dashAttr){var attr=attrs.$normalize(dashAttr);applyConfig(attr,attrs[attr]);});function applyConfig(attr,value){switch(attr){case "setDefaultDate":case "bound":case "reposition":case "disableWeekends":case "showWeekNumber":case "isRTL":case "showMonthAfterYear":case "firstDay":case "yearRange":case "numberOfMonths":case "mainCalendar":config[attr]=scope.$eval(value);break;case "onSelect":case "onOpen":case "onClose":case "onDraw":case "disableDayFn":config[attr]=function(date){setTimeout(function(){scope.$apply();});return scope[attr]({pikaday:this,date:date});};break;case "format":case "position":case "theme":case "yearSuffix":config[attr]=value;break;case "minDate":case "maxDate":case "defaultDate":config[attr]=new Date(value);break;case "trigger":case "container":config[attr]=document.getElementById(value);break;case "i18n":config[attr]=pikadayConfig.locales[value];}}
var picker=new Pikaday(config);scope.pikaday=picker;scope.$on('$destroy',function(){picker.destroy();});}};}}));